name: Deploy application
on:
  push:
    branches:
      - main

concurrency:
  group: deploy
  cancel-in-progress: true

env:
  PRINT_PAYLOAD: true

jobs:
  test-build-and-push:
    name: Test, build and push
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'maven'
      - name: Build maven artifacts
        run: mvn -B package
      - name: Push docker image to GAR
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: poao

  deploy-dev:
    name: Deploy application to dev gcp
    needs: test-build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}
          TELEMETRY: ${{ needs.test-build-and-push.outputs.telemetry }}

  deploy-prod:
    name: Deploy application to prod gcp and create release
    needs: [test-build-and-push, deploy-dev]
    permissions:
      contents: write
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais-prod.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}
          TELEMETRY: ${{ needs.test-build-and-push.outputs.telemetry }}
      - name: Create Version
        run: echo "VERSION=$(TZ=\"Europe/Oslo\" date +%Y.%m.%d_%H.%M)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: 'maven'
      - name: Deploy release
        run: mvn -B -Drevision="${{ env.VERSION }}" -DskipTests source:jar deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          prerelease: false

  deploy-dev-fss:
    name: Deploy application to dev fss
    needs: test-build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: .nais/nais-dev-onprem.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}
          TELEMETRY: ${{ needs.test-build-and-push.outputs.telemetry }}

  deploy-prod-fss:
    name: Deploy application to prod fss
    needs: [test-build-and-push,deploy-dev-fss]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-fss
          RESOURCE: .nais/nais-prod-onprem.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}
          TELEMETRY: ${{ needs.test-build-and-push.outputs.telemetry }}
